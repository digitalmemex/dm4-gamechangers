Format of the JSON elements returned by the plugin:

base URL: host/gamechangers

EVENTS
------

GET /v1/events
GET /v1/event/:id
GET /v2/:languageCode/events
GET /v2/:languageCode/event/:id

Example:
{
 id: 3213,
 _type: "event",
 name: "Reunion",		// req
 type: "establishing",
 address: "Berlin",
 from: "654912000000",
 to: "654912000000",
 notes: "<p>text text text</p>",
 url: "http://some/url",
 images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
 ],
 latestPublicComments: [ /* comments (most recently modified first) */ ],
 associatedItems: [
 	{ /* either a brand, group, institution, person, work or event */ }
 ],
 vimeoVideoId: 342340999
}

translated property:
 * name

Possible values for type are:
 * establishing
 * relocation
 * signing
 * appointment
 * name change
 * global event

Note:
Event instances have a "hidden" property in DM. When it is set to true the event is not returned through the REST interface.

INSTITUTIONS
------------

GET /v1/institutions
GET /v1/institution/:id
GET /v2/:languageCode/institutions
GET /v2/:languageCode/institution/:id

Example:
{
 id: 2131,
 _type: "institution",
 name: "Aalto University",
 type: "School",
 urls: [ "http://first/url", "http://second/url" ],
 notes: "<p>text text text</p>",
 from: <timestamp>,
 to: <timestamp>,
 images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
 ],
 vimeoVideoId: 342340999
}

translated property:
 * name

Possible values for type:
 * Company
 * School
 * Association

GROUPS
------

GET /v1/groups
GET /v1/group/:id
GET /v2/:languageCode/groups
GET /v2/:languageCode/group/:id

Example:
{
  id: 45342,
  _type: "group",
  name: "Somegroup",
  notes: "<p>edsfkjdshk</p>",
  from: 4320948320948,
  to: 482343809324,
  images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
 ],
 vimeoVideoId: 342340999
}

translated property:
 * name

BRANDS
------

GET /v1/brands
GET /v1/brand/:id
GET /v2/:languageCode/brands
GET /v2/:languageCode/brand/:id

Example:

{
  id: 4353,
  _type: "brand",
  name: "Somebrand",
  notes: "<p>dfjdslkfjdsfld</p>,
  from: 34243243324,
  to: 5454543543,
  images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
 ],
 vimeoVideoId: 342340999
}

translated property:
 * name

COMMENTS
--------

GET /v1/comments
GET /v1/comment/:id

Example:
{
  id: 7765,
  _type: "comment",
  name: "John Doe",
  notes: "<p>Tjewrewjrlkr</p>",
  commentedItemId: 6656,
  created: 1479206062062,
  images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
}

Note: Comments have a boolean property called "public" in DM. Only when this value is true the instance is returned by the REST interface.

PUT /v1/comment (body: JSON)

Expected JSON in body:
{
	"name":"James Jameson",		// max 160 chars
        "email":"test@gmail.com",	// dito
        "notes":"Big deal",		// dito
        "commentedItemId":4797		// must be present and resolve to a valid item in the DB that can be commented: brand, group, work, institution, event, person
}

PROPOSALS
---------

GET /v1/proposals
GET /v1/proposal

Example:
{
  id: 43543543,
  _type: "proposal",
  name: "John Doe",
  notes: "<p>I think that ...</p>",
  from: 454354354343543,
  to: 34324324,
   images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
 ]
}

PUT /v1/proposal (body: JSON)
Expected JSON in body:
{
	"name":"Teodor Tester",			// max 160 chars
        "email":"ted.test@xgmail.com",		// dito
        "notes":"Slashes at the end of the URL should not decide whether it works or not.",	// dito
        "from":972408544247,
        "to":1477330144247
}

PERSONS
-------

GET /v1/persons
GET /v1/person/:id
GET /v2/:languageCode/persons
GET /v2/:languageCode/person/:id

Example:
{
 id: 34423,
 _type: "person",
 name: "Leopold Bloom",
 notes: "Mr Leopold Bloom ate with relish the inner organs of beasts and fowls.",
 birth: -3281904000000,
 death: -757382400000,
  images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
 ],
 vimeoVideoId: 342340999
}

translated property:
 * name

WORKS
-----

GET /v1/works
GET /v1/work/:id
GET /v2/:languageCode/work
GET /v2/:languageCode/works/:id

Example:
{
  id: 4353,
  _type: "work",
  type: "",
  name: "Ulysses",
  notes: "<p>jflkdsjflkfj</p>",
  from: 432432432,
  to: 356546676546,
  images":[
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    caption: "Pink Elephant"
  },
  {
    url: "http:\/\/www.zephram.de\/blog\/wp-content\/uploads\/2010\/04\/rosa-elefant.jpg",
    /* without caption */
  }
 ],
 vimeoVideoId: 342340999
}

translated property:
 * name

Possible values for type are:
 * Discovery
 * Invention
 * Research
 * Process
 * Manifesto
 * Product
 * Architecture
